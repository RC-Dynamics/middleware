// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stringmanipulation.proto

package stringmanipulation

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type StrRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StrRequest) Reset()         { *m = StrRequest{} }
func (m *StrRequest) String() string { return proto.CompactTextString(m) }
func (*StrRequest) ProtoMessage()    {}
func (*StrRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60bff9b3e0817a8b, []int{0}
}

func (m *StrRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StrRequest.Unmarshal(m, b)
}
func (m *StrRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StrRequest.Marshal(b, m, deterministic)
}
func (m *StrRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StrRequest.Merge(m, src)
}
func (m *StrRequest) XXX_Size() int {
	return xxx_messageInfo_StrRequest.Size(m)
}
func (m *StrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StrRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StrRequest proto.InternalMessageInfo

func (m *StrRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type StrReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StrReply) Reset()         { *m = StrReply{} }
func (m *StrReply) String() string { return proto.CompactTextString(m) }
func (*StrReply) ProtoMessage()    {}
func (*StrReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_60bff9b3e0817a8b, []int{1}
}

func (m *StrReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StrReply.Unmarshal(m, b)
}
func (m *StrReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StrReply.Marshal(b, m, deterministic)
}
func (m *StrReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StrReply.Merge(m, src)
}
func (m *StrReply) XXX_Size() int {
	return xxx_messageInfo_StrReply.Size(m)
}
func (m *StrReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StrReply.DiscardUnknown(m)
}

var xxx_messageInfo_StrReply proto.InternalMessageInfo

func (m *StrReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*StrRequest)(nil), "stringmanipulation.StrRequest")
	proto.RegisterType((*StrReply)(nil), "stringmanipulation.StrReply")
}

func init() { proto.RegisterFile("stringmanipulation.proto", fileDescriptor_60bff9b3e0817a8b) }

var fileDescriptor_60bff9b3e0817a8b = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x28, 0x2e, 0x29, 0xca,
	0xcc, 0x4b, 0xcf, 0x4d, 0xcc, 0xcb, 0x2c, 0x28, 0xcd, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0xc2, 0x94, 0x51, 0x52, 0xe0, 0xe2, 0x0a, 0x2e, 0x29, 0x0a,
	0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0x54, 0xb8, 0x38, 0xc0, 0x2a, 0x0a, 0x72, 0x2a,
	0x85, 0x24, 0xb8, 0xd8, 0x73, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x61, 0x4a, 0x60, 0x5c, 0xa3, 0x58,
	0x2e, 0xa1, 0x60, 0xb0, 0xe9, 0xbe, 0x48, 0xa6, 0x0b, 0xb9, 0x73, 0xb1, 0x96, 0x16, 0x14, 0xa4,
	0x16, 0x09, 0xc9, 0xe9, 0x61, 0x71, 0x15, 0xc2, 0x62, 0x29, 0x19, 0x9c, 0xf2, 0x05, 0x39, 0x95,
	0x4a, 0x0c, 0x4e, 0x16, 0x5c, 0xd2, 0x99, 0xf9, 0x7a, 0xe9, 0x45, 0x05, 0xc9, 0x7a, 0xa9, 0x15,
	0x89, 0xb9, 0x05, 0x39, 0xa9, 0xc5, 0x7a, 0x19, 0xa9, 0x39, 0x39, 0xf9, 0xe5, 0xf9, 0x45, 0x39,
	0x29, 0x4e, 0xe2, 0x98, 0x76, 0x07, 0x80, 0xbc, 0x1c, 0xc0, 0x98, 0xc4, 0x06, 0xf6, 0xbb, 0x31,
	0x20, 0x00, 0x00, 0xff, 0xff, 0xd3, 0xb3, 0xc2, 0x29, 0x17, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StringManipulationClient is the client API for StringManipulation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StringManipulationClient interface {
	// Sends a greeting
	Upper(ctx context.Context, in *StrRequest, opts ...grpc.CallOption) (*StrReply, error)
}

type stringManipulationClient struct {
	cc *grpc.ClientConn
}

func NewStringManipulationClient(cc *grpc.ClientConn) StringManipulationClient {
	return &stringManipulationClient{cc}
}

func (c *stringManipulationClient) Upper(ctx context.Context, in *StrRequest, opts ...grpc.CallOption) (*StrReply, error) {
	out := new(StrReply)
	err := c.cc.Invoke(ctx, "/stringmanipulation.StringManipulation/upper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StringManipulationServer is the server API for StringManipulation service.
type StringManipulationServer interface {
	// Sends a greeting
	Upper(context.Context, *StrRequest) (*StrReply, error)
}

func RegisterStringManipulationServer(s *grpc.Server, srv StringManipulationServer) {
	s.RegisterService(&_StringManipulation_serviceDesc, srv)
}

func _StringManipulation_Upper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StringManipulationServer).Upper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stringmanipulation.StringManipulation/Upper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StringManipulationServer).Upper(ctx, req.(*StrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StringManipulation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stringmanipulation.StringManipulation",
	HandlerType: (*StringManipulationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "upper",
			Handler:    _StringManipulation_Upper_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stringmanipulation.proto",
}
